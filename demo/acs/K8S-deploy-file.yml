apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: drupal-deployment
spec:
  replicas: 1 # tells deployment to run x pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: drupal-app
    spec:
      containers:
      - name: drupal
        image: drupal
        imagePullPolicy: Always
        env:
          - name: AZSTORAGEMOUNT
            # change this
            value: REPLACEAZURESTORAGEMOUNT
        ports:
        - containerPort: 80
        securityContext:  #Try to allow for mounting in a container
          capabilities:
            add:
            - SYS_ADMIN  #needed to test the mount capabilites after container boot
        volumeMounts:
        - mountPath: /var/www/html/modules
          name: drupal-modules
        - mountPath: /var/www/html/profiles
          name: drupal-profiles
        - mountPath: /var/www/html/sites
          name: drupal-sites
        - mountPath: /var/www/html/themes
          name: drupal-themes
        
          # testing nfs mount
        - mountPath: "/usr/share/nfs"
          name: nfspvc
              
      volumes:
        - name: drupal-modules
          azureFile:
            secretName: azurefile-drupal-secret
            shareName: drupal-modules
            readOnly: false
        - name: drupal-profiles
          azureFile:
            secretName: azurefile-drupal-secret
            shareName: drupal-profiles
            readOnly: false
        - name: drupal-sites
          azureFile:
            secretName: azurefile-drupal-secret
            shareName: drupal-sites
            readOnly: false
        - name: drupal-themes
          azureFile:
            secretName: azurefile-drupal-secret
            shareName: drupal-themes
            readOnly: false
        - name: nfspvc
          persistentVolumeClaim:
            claimName: nfs-pvc
      securityContext:  #mount the disks as www-data instead of the default Root - waiting for Azure files to support fsGroup
        fsGroup: 33
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mysqlsvc-deployment
spec:
  replicas: 1 # tells deployment to run x pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: mysqlsvc-app
    spec:
      containers:
      - name: mysqlsvc
        image: mysql
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql 
          name: mysql-home
        args:
          - "--ignore-db-dir"
          - "lost+found"
        env:
          - name: MYSQL_ROOT_PASSWORD
            # change this
            value: REPLACEMYSQLPASSWORD
      volumes:
      - name: mysql-home
        persistentVolumeClaim:
          claimName: mysql-pv

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nfs-server-deployment
spec:
  replicas: 1 # tells deployment to run x pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: nfs-server-app
    spec:
      containers:
      - name: nfs-server
        image: gcr.io/google-samples/nfs-server:1.1
        ports:
        - containerPort: 3306
       ports:
          - name: nfs
            containerPort: 2049
          - name: mountd
            containerPort: 20048
          - name: rpcbind
            containerPort: 111
        securityContext:
          privileged: true
        volumeMounts:
          - mountPath: /exports
            name: nfspv
      volumes:
        - name: nfspv
          persistentVolumeClaim:
            claimName: nfspvc

---
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: slow
provisioner: kubernetes.io/azure-disk
parameters:
  skuName: Standard_LRS
---
apiVersion: "v1"
kind: "PersistentVolumeClaim"
metadata:
  name: "mysql-pv"
  annotations:
    volume.beta.kubernetes.io/storage-class: "slow"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
apiVersion: v1
kind: "PersistentVolumeClaim"
metadata:
  name: nfspvc
spec:
  capacity:
    storage: 1Mi
  accessModes:
    - ReadWriteMany
  nfs:
    # FIXME: use the right IP
    server: 10.0.140.225
    path: "/exports"